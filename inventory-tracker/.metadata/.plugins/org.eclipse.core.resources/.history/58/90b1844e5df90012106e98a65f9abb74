package gui.reports.productstats;

import static org.junit.Assert.*;

import java.util.Calendar;
import java.util.Date;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import core.model.BarCode;
import core.model.Item;
import core.model.Product;

public class ProductStatsCalculatorImplTest {
	
	static Product product;
	private ListOfItems list = new ListOfItems();
	private ProductStatsCalculator mockCalc;

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		product = Product.Factory.newProduct(BarCode.getBarCodeFor("123"));
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
		Date current = new Date();
		Calendar cal = Calendar.getInstance();
		cal.setTime(current);
		Item item = Item.Factory.newItem(product, cal.getTime());
		list.addCurrent(item);
		item = Item.Factory.newItem(product, cal.getTime());
		item.setExitDate(cal.getTime());
		list.addRemove(item);
		cal.setTime(current);
		cal.add(Calendar.WEEK_OF_YEAR, -2);
		item = Item.Factory.newItem(product, cal.getTime());
		list.addCurrent(item);
		cal.add(Calendar.WEEK_OF_YEAR, -1);
		item = Item.Factory.newItem(product, cal.getTime());
		cal.add(Calendar.WEEK_OF_YEAR, 2);
		item.setExitDate(cal.getTime());
		list.addRemove(item);
		
	}

	@After
	public void tearDown() throws Exception {
	}

	@Test
	public void testProductStatsCalculatorImpl() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testSetValues() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateCurrentSupply() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateAverageSupply() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateMinimumSupply() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateMaximumSupply() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateItemsUsed() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateItemsAdded() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateAverageAgeUsed() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateMaximumAgeUsed() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateAverageAgedCurrent() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateMaximumAgeCurrent() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testCalculateDayDifference() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testGetEarliestDate() {
		fail("Not yet implemented"); // TODO
	}

	@Test
	public void testGetLatestDate() {
		fail("Not yet implemented"); // TODO
	}

}
